---
title: "Automate Boring Stuff - Excel"
author: "Jinwook Chang"
date: "2023-08-20"
date-modified: "2023-08-20"
categories: [DataScience, Script]
---

본 자료는 Al Swigart가 쓴 [Automate The Boring Stuff with Python](https://automatetheboringstuff.com/) 교재의 [13장](https://automatetheboringstuff.com/2e/chapter13/)을 요약한 글입니다.

`openpyxl` 라이브러리를 활용하여 지루한 작업을 자동화해보도록 하겠습니다.

```{python}
import openpyxl
wb = openpyxl.load_workbook('example.xlsx')
print(type(wb))
```

![](example.png)

`workbook`은 엑셀 문서 그 자체를 나타냅니다. 이제 이 문서의 `sheet`에 접근하겠습니다.

```{python}
print(wb.sheetnames)
sheet = wb['Sheet3']
print(type(sheet))

print(sheet.title)
```

이제 `sheet` 안의 `cell`의 정보에 접근해보겠습니다.
`cell`은 주소로 접근할 수도 있으나, row / column을 지정할 수도 있습니다.
또한 `sheet`의 `max_row` / `max_column`을 통하여 최대 행과 열을 파악할 수 있습니다.

```{python}
sheet = wb['Sheet1']
cell = sheet['A1']

print(cell.coordinate)
print(cell.value)
```

```{python}
for i in range(1, 8):
  print(f'{sheet.cell(row = i, column = 2).coordinate} : {sheet.cell(row = i, column = 2).value}')
```

```{python}
print(f"{sheet.max_row} : {sheet.max_column}")
```

`cell`의 주소를 쉽게 숫자로 바꾸어주거나, 숫자를 주소로 변환해주는 함수 역시 지원합니다.

```{python}
from openpyxl.utils import get_column_letter, column_index_from_string

print(get_column_letter(27))
print(column_index_from_string('AA'))
```
이제 여러 `cell`에 한번에 접근해보겠습니다.

```{python}
for i in sheet['A1' : 'C3']:
  p = ""
  for j in i:
    p += str(j.value)
    p += " "
  print(p)


sheet['A':'A']
```


다음을 통해 excel 내 formula 역시 사용할 수 있습니다.

```{python}
sheet = wb['Sheet2']
sheet['A1'] = 200
sheet['A2'] = 300
sheet['A3'] = '=SUM(A1:A2)'

wb.save('writeformula.xlsx')
```

![](example2.png)