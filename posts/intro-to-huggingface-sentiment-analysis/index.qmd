---
title: "Intro to Huggingface Transformers - Sentiment Analysis"
author: "Jinwook Chang"
date: "2023-06-01"
date-modified: "2023-06-01"
categories: [DataScience, Script, NLP]
---

![](hf-logo.png)

"Transformers"는 Hugging Face에서 개발한 자연어 처리(NLP) 라이브러리입니다. 이 라이브러리는 트랜스포머 기반의 신경망 아키텍처를 이용한 모델들을 손쉽게 사용할 수 있게 합니다. 주로 Python 언어로 작성되었으며, PyTorch와 TensorFlow 등의 딥러닝 프레임워크와 호환됩니다.

Transformers 라이브러리는 다양한 사전 훈련된 모델을 제공하는데, BERT, GPT-2, GPT-3, T5, DistilBert, RoBERTa 등이 포함됩니다. 이 라이브러리를 통해 이들 모델을 쉽게 불러와, 텍스트 분류, 문장 생성, 문서 요약, 기계 번역, 감성 분석 등 다양한 NLP 작업에 활용할 수 있습니다. 또한, 이 라이브러리는 모델 훈련 및 미세조정(fine-tuning)을 지원하여, 특정 작업에 맞게 모델을 사용자 정의할 수 있게 합니다.

이번 자료에서는 간단한 Sentiment Analysis 예제를 통해 라이브러리 활용법을 알아보겠습니다.

### Install and Load Libraries

```python
!pip install transformers sentencepiece
```

```python
#The main package that contains functions to use Hugging Face
import transformers

#Set to avoid warning messages.
transformers.logging.set_verbosity_error()
```



### Pipeline이란?

Huggingface에서는 pipeline을 통해 일반적으로 활용되는 task들에 대한 wrapper를 제공합니다. \
다음은 제공하는 task 목록입니다.

```python
from transformers.pipelines import PIPELINE_REGISTRY

#Get the list of tasks that are supported by Huggingface pipeline
print(PIPELINE_REGISTRY.get_supported_tasks())
```

```python
['audio-classification', 'automatic-speech-recognition', 'conversational', 'depth-estimation', 'document-question-answering', 'feature-extraction', 'fill-mask', 'image-classification', 'image-segmentation', 'image-to-text', 'mask-generation', 'ner', 'object-detection', 'question-answering', 'sentiment-analysis', 'summarization', 'table-question-answering', 'text-classification', 'text-generation', 'text2text-generation', 'token-classification', 'translation', 'video-classification', 'visual-question-answering', 'vqa', 'zero-shot-audio-classification', 'zero-shot-classification', 'zero-shot-image-classification', 'zero-shot-object-detection']
```

Sentiment Analysis 모델에 대해 알아보겠습니다.

```python
#Get information about a specific task
print("\nDefault Model for Sentiment Analysis: ")
print(PIPELINE_REGISTRY.check_task('sentiment-analysis')[1].get('default'))
```

```python
{'model': {'pt': ('distilbert-base-uncased-finetuned-sst-2-english', 'af0f99b'), 'tf': ('distilbert-base-uncased-finetuned-sst-2-english', 'af0f99b')}}
```

여기서 pt는 pytorch에서 활용할 수 있는 기본 모델이며, tf은 tensorflow에서 활용할 수 있는 기본 모델입니다. \
이제 pipeline으로 기본 모델을 불러오도록 하겠습니다.

### Pipeline 기본 모델로 Sentiment 예측하기

```python
from transformers import pipeline
import os

#Load a pipeline. This will download the model checkpoint from huggingface and cache it 
#locally on disk. If model is already available in cache, it will simply use the cached version
#Download will usually take a long time, depending on network bandwidth

sentiment_classifier = pipeline("sentiment-analysis")

#Cache usually available at : <<user-home>>.cache\huggingface\hub

cache_dir = os.path.expanduser('~') + "/.cache/huggingface/hub"
print("Huggingface Cache directory is : ", cache_dir)

#Contents of cache directory
os.listdir(cache_dir)
```

```python
Huggingface Cache directory is :  /root/.cache/huggingface/hub
['models--distilbert-base-uncased-finetuned-sst-2-english', 'version.txt']
```


```python
#Predict sentiment using the pipeline
sentiment_results=sentiment_classifier("This is a great course")
print(sentiment_results)
```

```python
[{'label': 'POSITIVE', 'score': 0.9998713731765747}]
```

```python
#A second example
sentiment_results=sentiment_classifier("The download speed is really bad")
print(sentiment_results)
```

```python
[{'label': 'NEGATIVE', 'score': 0.9998070597648621}]
```

### Custom 모델을 활용하여 sentiment 예측하기

```python
sentiment_classifier = pipeline(task="sentiment-analysis",
                                model="finiteautomata/bertweet-base-sentiment-analysis")

sentiment_result=sentiment_classifier("This is a great course")

print(sentiment_result)

#Contents of cache directory
os.listdir(cache_dir)
```

```python
[{'label': 'POS', 'score': 0.9920700192451477}]
['models--distilbert-base-uncased-finetuned-sst-2-english',
 'models--finiteautomata--bertweet-base-sentiment-analysis',
 'version.txt']
```